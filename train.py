# -*- coding: utf-8 -*-
"""tomato_disease_diagnosis

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HGnBBdu99Tnc1h0s13xHNGRzA3p-2h8Y
"""

'''
####### SINCE I TRAINED MY MODEL IN COLAB, I USED DRIVE TO ACCESS THE DATASET
from google.colab import drive
drive.mount('/content/drive')
'''


'''
#for moving the files into respective test and train directory
#before this use the file_rename.sh shell script to rename all files in
#proper numerical order.


import os
import shutil
cwd=os.path.join(os.getcwd(), 'drive/My Drive')
os.mkdir(os.path.join(cwd,'train'))
os.mkdir(os.path.join(cwd,'test'))
for dir in os.listdir(cwd+'/tomato_disease_dataset'):
	file_list=os.listdir(os.path.join(cwd,'tomato_disease_dataset', dir))
	ln=len(file_list)
	train=file_list[:int(ln*0.8)]
	test=[x for x in file_list if x not in train]
	
	#moving train files:
	os.mkdir(os.path.join(cwd,'train', dir))
	for f in train:
		shutil.move(os.path.join(cwd,'tomato_disease_dataset', dir, f),os.path.join(cwd, 'train', dir, f))
		
	#moving test files:
	os.mkdir(os.path.join(cwd,'test', dir))
	for f in test:
		shutil.move(os.path.join(cwd,'tomato_disease_dataset', dir, f),os.path.join(cwd, 'test', dir, f))
	
	
print("\nDone moving files\n")
'''




############ USING MOBILENET MODEL ##############
import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, Conv2D, Flatten, Dropout, MaxPooling2D
from tensorflow.keras import layers
import tensorflow_hub as hub
from tensorflow.keras.preprocessing.image import ImageDataGenerator

##### CREATING TEST AND TRAIN IMAGE DATA GENERATORS
IMG_SIZE=256

import os
cwd=os.path.join(os.getcwd(), 'drive/My Drive') ## ALTER THIS ACCORDING TO THE PATH WHERE DATA IS

image_gen_train = ImageDataGenerator(rescale=1./255, horizontal_flip=True, rotation_range=60, width_shift_range=0.2, height_shift_range=0.2, zoom_range=0.2, fill_mode='nearest')

train_gen = image_gen_train.flow_from_directory(batch_size=32, directory = cwd+'/train', shuffle = True, target_size =(IMG_SIZE, IMG_SIZE), class_mode = 'sparse')

image_gen_test = ImageDataGenerator(rescale = 1./255)

test_gen = image_gen_test.flow_from_directory(batch_size=32, directory=cwd+'/test', target_size=(IMG_SIZE, IMG_SIZE), class_mode='sparse')


'''
URLs for the TF-hub models
imagenet - (192,192) : https://tfhub.dev/google/imagenet/mobilenet_v1_075_192/quantops/feature_vector/3
inception-resnet-v2 - (299, 299) or closer: https://tfhub.dev/google/imagenet/inception_resnet_v2/classification/4
'''

model = tf.keras.Sequential([
    hub.KerasLayer("https://tfhub.dev/google/imagenet/mobilenet_v1_075_192/quantops/feature_vector/3", trainable=False, input_shape=(IMG_SIZE,IMG_SIZE,3)),
    tf.keras.layers.Dense(10, activation='softmax')
])

model.compile(
  optimizer='adam', 
  loss='sparse_categorical_crossentropy',
  metrics=['accuracy'])

model.summary()

EPOCHS = 25
history = model.fit_generator(train_gen,
                    epochs=EPOCHS,
                    validation_data=test_gen)

model.save(cwd+'/my_tomato_model_mobilenet.h5')


'''
######### USING VGG16 FROM KERAS APPLICATIONS ############

from tensorflow.keras.applications.vgg16 import VGG16
from tensorflow.keras.models import Model
from tensorflow.keras.layers import Dense, Dropout, Flatten

base_model=VGG16(weights='imagenet', include_top=False, input_shape=(256, 256, 3))
x = base_model.output
x = Flatten()(x)
predictions = Dense(10, activation='softmax')(x)

model = Model(inputs=base_model.input, outputs=predictions)

# First: train only the top layers (which were randomly initialized)
for layer in base_model.layers:
    layer.trainable = False

model.compile(loss='sparse_categorical_crossentropy', 
              optimizer='adam', 
              metrics=['accuracy'])


model.summary()

#training the model
EPOCHS = 20
history = model.fit_generator(train_gen,
                    steps_per_epoch=416,         
                    epochs=EPOCHS,
                    validation_data=test_gen,
                    validation_steps=104)
model.save(cwd+'/my_tomato_model_vgg16.h5')

'''
